jobs:
  build-image:
    type: build
    image: main-org-publish
    dockerfile: with-js.Dockerfile
    path: ${project.repos.main.path}/org-publish
    enabled: ${params.build-org-publish-image}

  # FIXME: redunant?
  _init_gen_dir:
    type: script
    env:
      DATA_DIR: ${project.data.path}/gen-main
    script: |
      mkdir -p ${DATA_DIR} || echo "Already exists"

  clean_caches:
    needs:
      - _init_gen_dir
    image: alpine
    type: script
    interpreter: ['/bin/sh', '-c']
    volumes:
      '/timestamps': main-org-publish-cache
    script: |
      set -e

      files=$(find /timestamps -type f)
      echo "Removing files:\n$files"
      rm -Rf $files
    enabled: ${params.clean-caches}

  publish:
    needs:
      - build-image
      - clean_caches
    stage: publish

    type: script
    image: main-org-publish
    interpreter: ['/bin/sh', '-c']
    volumes:
      '/root/.org-timestamps': main-org-publish-cache
      '/publish/input': ${project.repos.main.path}/public
      '/publish/config': ${project.repos.main.path}/org-publish/config
      '/publish/output': ${project.data.path}/gen-main
    script: |
      set -e

      # Remove lock files
      rm -Rf /root/.org-timestamps/.#*

      emacs --batch -l /publish/config/init.el --eval '(org-publish-project "mainsite")'

      rm -Rf /publish/output/js/mathjax || echo "Already cleaned"
      rm -Rf /publish/output/js/mermaid || echo "Already cleaned"
      rm -Rf /publish/output/css/tailwind.css || echo "Already cleaned"

      rm -Rf /publish/output/css/highlight.css || echo "Already cleaned"
      rm -Rf /publish/output/js/highlight.js || echo "Already cleaned"

      echo "Building tailwind"
      npx tailwindcss -c /publish/input/other/tailwind/tailwind.config.js \
        -i /publish/input/other/tailwind/input.css \
        -o /publish/output/css/tailwind.css \
        -m

      echo "Installing Mermaid"
      mkdir mermaid
      tar -xvf mermaid.tgz -C mermaid/
      mv mermaid/package/dist /publish/output/js/mermaid

      echo "Installing MathJax"
      mkdir mathjax
      unzip mathjax.zip -d mathjax
      mv mathjax/MathJax-master/es5 /publish/output/js/mathjax

      echo "Installing highlight.js"
      mv highlight.js/build/highlight.js /publish/output/js/highlight.js
      mv highlight.js/src/styles/base16/classic-light.css /publish/output/css/hljs-light.css
      mv highlight.js/src/styles/base16/classic-dark.css /publish/output/css/hljs-dark.css

      echo "Installing fonts"
      unzip -o iosevka.zip -d /publish/output/fonts/

stages:
  publish:
    on_overlap: cancel

integrations:
  # github:
  #   token: ${project.secrets.github_token}
  #   repo: 'iliayar/iliayar'
  #   rev: ${project.repos.main.rev}
