jobs:
  build-image:
    enabled: ${params.build-org-publish-image}
    do:
      type: build
      image: main-org-publish
      dockerfile: with-js.Dockerfile
      path: ${project.repos.main.path}/org-publish

  # FIXME: redunant?
  _init_gen_dir:
    do:
      type: script
      env:
        DATA_DIR: ${project.data_path}/gen-main
      script: |
        mkdir -p ${DATA_DIR} || echo "Already exists"

  clean_caches:
    enabled: ${params.clean-caches}
    needs:
      - _init_gen_dir
    do:
      image: alpine:latest
      type: script
      interpreter: ['/bin/sh', '-c']
      volumes:
        '/timestamps': main-org-publish-cache
      script: |
        set -e

        files=$(find /timestamps -type f)
        echo "Removing files:\n$files"
        rm -Rf $files

  publish:
    stage: publish
    needs:
      - build-image
      - clean_caches
    do:
      type: script
      image: main-org-publish
      interpreter: ['/bin/sh', '-c']
      volumes:
        '/root/.org-timestamps': main-org-publish-cache
        '/publish/input': ${project.repos.main.path}/public
        '/publish/config': ${project.repos.main.path}/org-publish/config
        '/publish/output': ${project.data_path}/gen-main
      script: |
        set -e

        # Remove lock files
        rm -Rf /root/.org-timestamps/.#*

        emacs --batch -l /publish/config/init.el --eval '(org-publish-project "mainsite")'

        rm -Rf /publish/output/js/mathjax || echo "Already cleaned"
        rm -Rf /publish/output/js/mermaid || echo "Already cleaned"
        rm -Rf /publish/output/css/tailwind.css || echo "Already cleaned"

        rm -Rf /publish/output/css/highlight.css || echo "Already cleaned"
        rm -Rf /publish/output/js/highlight.js || echo "Already cleaned"

        echo "Building tailwind"
        npx tailwindcss -c /publish/input/other/tailwind/tailwind.config.js \
          -i /publish/input/other/tailwind/input.css \
          -o /publish/output/css/tailwind.css \
          -m

        echo "Installing Mermaid"
        cp -r mermaid/package/dist /publish/output/js/mermaid

        echo "Installing MathJax"
        cp -r MathJax-master/es5 /publish/output/js/mathjax

        echo "Installing highlight.js"
        mv highlight.js/build/highlight.js /publish/output/js/highlight.js
        mv highlight.js/src/styles/base16/classic-light.css /publish/output/css/hljs-light.css
        mv highlight.js/src/styles/base16/classic-dark.css /publish/output/css/hljs-dark.css

        echo "Installing fonts"
        cp -r iosevka/* /publish/output/fonts/
        cp -r fontawesome*/css /publish/output/fonts/
        cp -r fontawesome*/webfonts /publish/output/fonts/

        echo "Done"

stages:
  publish:
    on_overlap: cancel

integrations:
  github:
    token: ${project.secrets.github_token}
    repo: 'iliayar/iliayar'
    rev: ${project.repos.main.rev}
    ui_url: 'https://uci.ilyay.space'
    jobs_to_report:
    - publish
    - build-image
